@model Blog.Models.Comment

@{
    ViewBag.Title = "Edit";
}

<!-- Page Header -->
<header class="masthead" style="background-image: url('/img/lock.jpg')">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="site-heading">
                    <h1>Comments Edit</h1>
                    <span class="subheading"><br /></span>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="container-fluid page-body-wrapper">


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Edit Comment</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @* Added to try to fix db. error *@
            @Html.HiddenFor(model => model.Created)
            @Html.HiddenFor(model => model.BlogPostId)
            @Html.HiddenFor(model => model.AuthorId)

            @*<div class="form-group">
                    @Html.LabelFor(model => model.BlogPostId, "BlogPostId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("BlogPostId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BlogPostId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AuthorId, "AuthorId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AuthorId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.commentBody, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.commentBody, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.commentBody, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.UpdateReason, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UpdateReason, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdateReason, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-outline-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>