@model Blog.Models.BlogPost

@{
    ViewBag.Title = "Create";
}

<!-- Page Header -->
<header class="masthead" style="background-image: url('/img/create1.jpg')">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="site-heading">
                    <h1>BlogPosts index</h1>
                    <span class="subheading">One *more* error at a t1me</span>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="container">
    @using (Html.BeginForm("Create","Blogposts", FormMethod.Post, new { enctype ="Multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4> Create BlogPost</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

           @* Slug was here  *@

            <div class="form-group">
                @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                    @* TODO: Replacing editorFor but not completed *@
                    @*@Html.TextAreaFor(Model => Model.Body, )*@
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
                </div>
            </div>

            @* Created and Updated was here *@

            <div class="form-group">
                    @Html.LabelFor(model => model.MediaPath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input name="image" type="file" class="form-control" id="fileUpload" />
                        @Html.ValidationMessageFor(model => model.MediaPath, "", new { @class = "text-danger" })
                    </div>
                </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Published)
                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-outline-success" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-dark" })
                </div>
            </div>
        </div>
    }

    @section Scripts {
        <script src="~/Scripts/tinymce/tinymce.min.js"></script>
        <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
        <script type="text/javascript">
            $(function () {
                tinymce.init({
                    selector: '#Body'
                });
            });
        </script>
    }
</div>